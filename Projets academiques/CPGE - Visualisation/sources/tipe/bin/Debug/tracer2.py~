# -*- coding: latin1 -*-

from mpl_toolkits.mplot3d import axes3d
import matplotlib.pyplot as plt
import numpy as np
#from matplotlib import cm

def tracerhyper(L):
    global T
    n = len(L)
    X = [0]*(n+1)
    Y = [0]*(n+1)
    for i in range(n):
        print T
        X[i],Y[i] = T[L[i]]
    X[n],Y[n] = T[L[0]]
    plt.plot(X, Y)

def tracerhyper2(L):
    global T
    n = len(L)
    #X = [0]*(n*n+n)/2
    #Y = [0]*(n*n+n)/2
    #Z = [0]*(n*n+n)/2
    X = []
    Y = []
    for i in range(n):
        for j in range(i,n):
            X.append(T[L[j]])
            Y.append(T[L[j]])
            Y.append(T[L[j]])
        print T
        X[i],Y[i] = T[L[i]]
    X[n],Y[n] = T[L[0]]
    plt.plot(X, Y)


nom = input("Nom du fichier : ") 
fichier = open(nom, "r")
contenu = fichier.read()
fichier.close()

contenu = contenu.split("\n")
contenu = [l.split("\t") for l in contenu]

d=int(contenu[0][0])
n=int(contenu[0][1])
del contenu[0]
#T = [[float(contenu[i][j]) for i in range(n)] for j in range(d)]
T = [[float(contenu[i][j]) for j in range(d)] for i in range(n)]
a = int(contenu[n][0])
#del contenu[n]
#H = [[int(contenu[i][j]) for j in range(1,int(contenu[i][0])+1)] for i in range(n,n+a)]
del contenu[0:n+1]
H = [[int(contenu[i][j]) for j in range(1,int(contenu[i][0])+1)] for i in range(a)]


for L in H:
    tracerhyper(L)

plt.axis('equal')
plt.show()

